@using SmithsonianSearch.Configuration
@using SmithsonianSearch.Helpers
@model SmithsonianSearch.Models.SearchResultsModels.ISearchResultsModel
@{ bool isEmptyOrDefaultQuery = string.IsNullOrEmpty(Model.SearchModel.Query) || Model.SearchModel.Query.Equals(Config.Instance.DefaultSearchPhrase, StringComparison.CurrentCultureIgnoreCase); }
<div class="row">
    <div class="col-md-3"></div>
    <div class="col-md-6">
        <div id="search-box">
            <div class="clearfix">
                @using (Ajax.BeginForm("Search", "Search", Model.SearchModel.GetSearchModelForNewSearch().GetRouteValueObject(), null, new { id = "search" }))
                {
                    var searchPhrase = !isEmptyOrDefaultQuery ? Model.SearchModel.Query : string.Empty;
                    var css = string.IsNullOrEmpty(searchPhrase) ? "noImage" : string.Empty;

                    <input type="text" name="query" id="searchPhrase" value="@searchPhrase" class="ui-autocomplete-input"/>
                    <div id="clearSearchBox" class="@css" title="Clear Search Phrase">&nbsp;</div>
                    <input type="submit" value="Search" class="search text-hide" />
                    <div id="linksContainer">
                        <a  data-toggle="modal" data-target="#helpModal">Search Help</a>
                    </div>

                    <!-- Modal -->
                    <div class="modal" id="helpModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                      <div class="modal-dialog">
                        <div class="modal-content">
                          <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                            <h4 class="modal-title" id="myModalLabel">Search Help</h4>
                          </div>
                          <div class="modal-body">
                              <p>Our searching interface is designed for ease-of-use but also as a powerful tool for researchers.  We will be refining and making improvements to this design for years to come and appreciate your feedback.  Please email us at <a href="mailto:SmithsonianFolkways@si.edu?subject=Folkways%20Search%20Feedback" target="_blank">SmithsonianFolkways@si.edu</a>, with the subject line Folkways Search Feedback and we will make a point of responding and if possible incorporating your suggestions.</p>

                            <p>This search tool can be approached broadly or specifically.  We suggest broad searches under our Browse By dropdowns.  If you select the genre “Blues” for example you will see many thousands of results.  You can then refine your results in two different ways.  At the top you can filter by content type and along the left hand side you can filter by a selection of glossary terms.  These left-column filters are driven by cataloging work in the collection and are regularly being edited and improved upon.</p>

                            <p>Results can be viewed with thumbnails or in list view and can be sorted by relevance (default), alphabetically by title or artist and by catalog number or date.</p>

                            <p>Like most searches if you enter several words it will find content where those words both occur.  To be more specific you can wrap your words in quotes.  For example Silk Road returns 59 results where Silk and Road occur on the page.  The same phrase wrapped in quotes, “Silk Road” looks for those terms adjacent to each other, 49 results.</p>

                            <p>Happy Searching!</p>
                          </div>
                          <div class="modal-footer">
                            <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                          </div>
                        </div>
                      </div>
                    </div>
                    
                }
            </div>
            @if (!string.IsNullOrEmpty(Model.SearchModel.Query))
            {
                @:<p>Showing @Model.SearchModel.PaginationModel.EstimatedNumberOfResults results
                if (!isEmptyOrDefaultQuery)
                {
                    @:for <i id="showingResultsForQuery">@Model.SearchModel.Query</i></p>
                }
            }
        </div>        
        <div class="filter-options">
          <span>Options:</span> <a href="#" onclick="toggle_visibility('filters');">Filter results</a><span style="display: @(Model.RelatedQueries.RelatedQueries.Any() ? "" : "none")"> | <a href="#" onclick="toggle_visibility('relatedMain');"> Related searches</a></span>
        </div>
    </div>
    <div class="col-md-3 hidden-xs hidden-sm addThis-container">
        <div class="addThis">
            <span><img src="~/img/label_share.png" alt="Share" title="Share" width="51" /></span>
            <div class="addthis_toolbox addthis_default_style ">
                <a class="addthis_button_preferred_1"></a>
                <a class="addthis_button_preferred_2"></a>
                <a class="addthis_button_preferred_3"></a>
                <a class="addthis_button_compact"></a>
            </div>
        </div>
    </div>
</div>