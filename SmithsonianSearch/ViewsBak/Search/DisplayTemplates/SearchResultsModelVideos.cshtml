@* This view is responsible for rendering videos in list view *@
@model SmithsonianSearch.Models.SearchResultsModels.SearchResultsModelVideos

@helper GetRowClass(int index)
{
    if (index % 2 == 0)
    {
        @:alt
    }
}

@{
    bool printHeader = ViewData.ContainsKey("printHeader") ? (bool)ViewData["printHeader"] : true;
    int index = 1;
}

@if (Model.Items != null && Model.Items.Any())
{
    if (printHeader)
    {
    <text>
        <table class="searchResultsTable">
            <thead>
                <tr class="header">
                    <th><img src="~/img/header_title.png" alt="Title" title="Title" /></th>
                    <th><img src="~/img/header_duration.png" alt="Duration" title="Duration" /></th>
                </tr>
            </thead>
            <tbody>
     </text>
    }

    foreach (var video in Model.Items)
    {
                <text>
                <tr class="@GetRowClass(index++)">
                    <td><a href='@video.Url' title='@video.Title'>@video.Title</a></td>
                    <td>@video.Duration</td>
                </tr>
                </text>
    }
    
    @ViewHelperMethods.RenderLazyLoadingLink(Model.SearchModel, 2)

    if (printHeader)
    {
       @:</tbody></table>
    }
}
else if (Model.SearchModel != null && !string.IsNullOrEmpty(Model.SearchModel.Query))
{
    @Html.Partial("NoResults")
}