@* This view is responsible for rendering an playlist in tiles view *@
@using SmithsonianSearch.Configuration
@using SmithsonianSearch.Helpers
@model SmithsonianSearch.Models.ResultItems.Playlist

@{
    var imageAlt = HttpUtility.UrlDecode(string.IsNullOrEmpty(Model.Title) ? "Link" : Model.Title);
    var imageSrc = string.IsNullOrEmpty(Model.ImageUrl) ? Url.Content("~/img/playlist-thumb.gif") : Model.ImageUrl;
}

<li class="card album-card col-xs-6 col-sm-2 search-result">
    <div class="image">
        <a href="@Model.Url">
            <img src="@imageSrc" alt="@imageAlt" />
            @*<span class="content-type-overlay">ALBUM</span>*@
        </a>
    </div>
    <div class="details">
        <div class="details-inner">
            <span class="caption">PLAYLIST</span>
            <a href="@Model.Url" title="@Model.Title" class="high title">
                <span class="light">
                    <span class="er">
                        @Html.Raw(Model.Title.Truncate(Config.Instance.ItemTitleMaxLength))
                    </span>
                </span>
            </a>
            @if (!string.IsNullOrEmpty(Model.Duration))
            {
                <div class="artist">
                    <p><em>Duration</em>@Model.Duration.Truncate(Config.Instance.ItemTitleMaxLength)</p>
                </div>
            }
        </div>
    </div>
</li>

@*<li class="clearfix">
    <a class="imageLink" href="@Model.Url">
        <img src="@imageSrc" alt="@imageAlt" />
        <span class="content-type-overlay">PLAYLIST</span>
    </a>
    <ul>
        <li><h2><a href="@Model.Url" title="@Model.Title">@Html.Raw(Model.Title.Truncate(Config.Instance.ItemTitleMaxLength))</a></h2></li>
        @if (!string.IsNullOrEmpty(Model.Duration))
        {
            <li title="@Model.Duration"><em>Duration</em>@Model.Duration.Truncate(Config.Instance.ItemTitleMaxLength)</li>
        }
    </ul>
    
</li>*@